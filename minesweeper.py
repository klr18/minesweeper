import tkinter as tk  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏—á–µ—Å–∫—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É Tkinter
from random import shuffle  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é shuffle –∏–∑ –º–æ–¥—É–ª—è random
from tkinter.messagebox import showinfo, showerror  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º showinfo –∏ showerror –∏–∑ –º–æ–¥—É–ª—è tkinter.messagebox

colors = {
    1: '#e44aa8',
    2: '#49e3d9',
    3: '#49e360',
    4: '#e34949',
    5: '#4b49e3',
    6: '#e3e349',
    7: '#b049e3',
    8: '#ff00ba',
}  # —Å–ª–æ–≤–∞—Ä—å, —Ö—Ä–∞–Ω—è—â–∏–π —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏


class MyButton(tk.Button):  # –∫–ª–∞—Å—Å, –Ω–∞—Å–ª–µ–¥—É–µ–º—ã–π –æ—Ç –∫–ª–∞—Å—Å–∞ tk.Button

    def __init__(self, master, x, y, number=0, *args, **kwargs):  # –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ init –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        # –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏
        super(MyButton, self).__init__(master, width=3, font='Calibri 15 bold', *args, **kwargs)  # –≤—ã–∑—ã–≤–∞–µ–º init
        # —É —Å–∞–º–æ–π –∫–Ω–æ–ø–∫–∏ (tk.Button)
        self.x = x  # –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –ø–æ x
        self.y = y  # –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –ø–æ y
        self.number = number  # –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä
        self.is_mine = False  # –ø—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–Ω–æ–ø–∫–∞ –±–æ–º–±–æ–π
        self.count_bomb = 0  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–º–± –ø–æ —Å–æ—Å–µ–¥—Å—Ç–≤—É
        self.is_open = False  # –ø—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞


class MineSweeper:  # –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∏–≥—Ä—ã

    window = tk.Tk()  # —Å –ø–æ–º–æ—â—å—é –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ Tk —Å–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    rows = 10  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ
    cols = 16  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ
    mines = 20  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ
    is_game_over = False  # –ø—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ –∏–≥—Ä–∞
    is_first_click = True  # –ø—Ä–æ–≤–µ—Ä–∫–∞, –∫–ª–∏–∫–Ω—É–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º—ã—à–∫–æ–π —Å –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã

    def __init__(self):  # –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ init –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã
        self.buttons = []  # —Å–ø–∏—Å–æ–∫, —Ö—Ä–∞–Ω—è—â–∏–π –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—è
        for i in range(MineSweeper.rows + 2):
            temp = []
            for j in range(MineSweeper.cols + 2):  # —Ü–∏–∫–ª—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–≤—É–º–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
                btn = MyButton(MineSweeper.window, x=i, y=j)  # —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MyButton
                btn.config(command=lambda button=btn: self.click(button))  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
                btn.bind('<Button-3>', self.right_click)  # —Å–≤—è–∑—ã–≤–∞–µ—Ç –≤–∏–¥–∂–µ—Ç (–∫–Ω–æ–ø–∫—É),
                # —Å–æ–±—ã—Ç–∏–µ (–Ω–∞–∂–∞—Ç–∏–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏) –∏ –¥–µ–π—Å—Ç–≤–∏–µ (–º–µ—Ç–æ–¥)
                temp.append(btn)
            self.buttons.append(temp)

    def right_click(self, event):  # –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏
        if MineSweeper.is_game_over:  # –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞
            return
        cur_btn = event.widget  # –∫–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–∞–∂–∞–ª–∏
        if cur_btn['state'] == 'normal':
            cur_btn['state'] = 'disable'  # –ø–µ—Ä–µ—Ö–æ–¥ –æ–±—ã—á–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–∞—Ç–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–µ–ª—å–∑—è –Ω–∞–∂–∞—Ç—å)
            cur_btn['text'] = 'üö©'  # —Ä–∏—Å—É–µ–º –∫—Ä–∞—Å–Ω—ã–π —Ñ–ª–∞–∂–æ–∫ –Ω–∞ –¥–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ
            cur_btn['disabledforeground'] = 'red'
        elif cur_btn['text'] == 'üö©':
            cur_btn['text'] = ''
            cur_btn['state'] = 'normal'  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –æ–±—ã—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    def click(self, clicked_button: MyButton):  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
        if MineSweeper.is_game_over:  # –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞
            return None

        if MineSweeper.is_first_click:  # –µ—Å–ª–∏ —Å–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∫–ª–∏–∫ –º—ã—à–∫–æ–π
            self.insert_mines(clicked_button.number)  # –º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            self.count_mines_in_buttons()  # –ø–æ–¥—Å—á–µ—Ç –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π
            self.print_buttons()  # –≤—ã–≤–æ–¥ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ –∫–æ–Ω—Å–æ–ª—å
            MineSweeper.is_first_click = False

        if clicked_button.is_mine:  # –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∞
            clicked_button.config(text='*', background='red', disabledforeground='black')  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–∏–¥–∞ –∫–Ω–æ–ø–∫–∏
            clicked_button.is_open = True  # –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
            MineSweeper.is_game_over = True  # –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
            showinfo('game over', '–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏')  # –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–∏–≥—Ä—ã—à–µ
            for i in range(1, MineSweeper.rows + 1):
                for j in range(1, MineSweeper.cols + 1):  # —Ü–∏–∫–ª—ã –ø–æ –∫–Ω–æ–ø–∫–∞–º, –∫—Ä–æ–º–µ –∫—Ä–∞–π–Ω–∏—Ö
                    btn = self.buttons[i][j]
                    if btn.is_mine:
                        btn['text'] = '*'  # –æ—Ç–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
        else:  # –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∞
            color = colors.get(clicked_button.count_bomb, 'black')  # –¥–æ—Å—Ç–∞–µ–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è colors –Ω—É–∂–Ω—ã–π —Ü–≤–µ—Ç
            if clicked_button.count_bomb:  # –µ—Å–ª–∏ —á–∏—Å–ª–æ —Å–æ—Å–µ–¥–Ω–∏—Ö –º–∏–Ω –Ω–µ —Ä–∞–≤–Ω–æ 0
                clicked_button.config(text=clicked_button.count_bomb, disabledforeground=color)  # –ø—Ä–∏–¥–∞–µ–º –∫–Ω–æ–ø–∫–µ
                # –Ω—É–∂–Ω—ã–π –≤–∏–¥
                clicked_button.is_open = True  # –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            else:  # –µ—Å–ª–∏ —á–∏—Å–ª–æ —Å–æ—Å–µ–¥–Ω–∏—Ö –º–∏–Ω —Ä–∞–≤–Ω–æ 0
                self.breadth_first_search(clicked_button)  # –≤—ã–∑—ã–≤–∞–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ –≤ —à–∏—Ä–∏–Ω—É
        clicked_button.config(state='disabled')  # –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç–∏—á–Ω–æ–π
        clicked_button.config(relief=tk.SUNKEN)  # –º–µ–Ω—è–µ–º —Ä–µ–ª—å–µ—Ñ –∫–Ω–æ–ø–∫–∏

    def breadth_first_search(self, btn: MyButton):  # –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ –≤ —à–∏—Ä–∏–Ω—É
        queue = [btn]  # —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        while queue:  # –ø–æ–∫–∞ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç–æ–π
            cur_btn = queue.pop()  # –≤—ã–Ω–∏–º–∞–µ–º –∏–∑ –Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç
            color = colors.get(cur_btn.count_bomb, 'black')  # –¥–æ—Å—Ç–∞–µ–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è colors –Ω—É–∂–Ω—ã–π —Ü–≤–µ—Ç
            if cur_btn.count_bomb:  # –µ—Å–ª–∏ —Å—Ä–µ–¥–∏ —Å–æ—Å–µ–¥–µ–π –µ—Å—Ç—å –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
                cur_btn.config(text=cur_btn.count_bomb, disabledforeground=color)  # –∫–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º
            else:
                cur_btn.config(text='', disabledforeground=color)  # –ø—É—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞
            cur_btn.is_open = True  # –æ—Ç–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            cur_btn.config(state='disabled')  # –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç–∏—á–Ω–æ–π
            cur_btn.config(relief=tk.SUNKEN)  # –º–µ–Ω—è–µ–º —Ä–µ–ª—å–µ—Ñ –∫–Ω–æ–ø–∫–∏

            if cur_btn.count_bomb == 0:  # –µ—Å–ª–∏ –≤–æ–∫—Ä—É–≥ –Ω–µ—Ç –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
                x, y = cur_btn.x, cur_btn.y
                for dx in [-1, 0, 1]:
                    for dy in [-1, 0, 1]:  # —Ü–∏–∫–ª –ø–æ –≤—Å–µ–º —Å–æ—Å–µ–¥—è–º –∫–Ω–æ–ø–∫–∏
                        next_btn = self.buttons[x + dx][y + dy]
                        if not next_btn.is_open and 1 <= next_btn.x <= MineSweeper.rows and \
                                1 <= next_btn.y <= MineSweeper.cols and next_btn not in queue:  # –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –µ—â–µ –Ω–µ
                            # –æ—Ç–∫—Ä—ã—Ç–∞, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –∫—Ä–∞–π–Ω—è—è –∏ –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –≤ —Å–ø–∏—Å–∫–µ
                            queue.append(next_btn)  # –¥–æ–±–∞–≤–∏—Ç—å –µ–µ –≤ —Å–ø–∏—Å–æ–∫

    def reload(self):  # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
        [child.destroy() for child in self.window.winfo_children()]  # —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ
        self.__init__()  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã
        self.create_widgets()  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
        MineSweeper.is_first_click = True
        MineSweeper.is_game_over = False  # —Å–±—Ä–æ—Å –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

    def create_settings_window(self):
        win_settings = tk.Toplevel(self.window)  # —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–µ–≥–æ –æ–∫–Ω–∞
        win_settings.title('–Ω–∞—Å—Ç—Ä–æ–π–∫–∏')  # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞

        tk.Label(win_settings, text='–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫').grid(row=0, column=0)  # —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫
        rows_entry = tk.Entry(win_settings)  # —Å–æ–∑–¥–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫
        rows_entry.insert(0, MineSweeper.rows)  # –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
        rows_entry.grid(row=0, column=1, padx=20, pady=20)  # –≤—Å—Ç–∞–≤–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞ –≤ –æ–∫–Ω–æ –ø–æ –∏–Ω–¥–µ–∫—Å—É

        tk.Label(win_settings, text='–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤').grid(row=1, column=0)  # —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
        cols_entry = tk.Entry(win_settings)  # —Å–æ–∑–¥–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
        cols_entry.insert(0, MineSweeper.cols)  # –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ —Å—Ç–æ–ª–±—Ü–æ–≤ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
        cols_entry.grid(row=1, column=1, padx=20, pady=20)  # –≤—Å—Ç–∞–≤–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞ –≤ –æ–∫–Ω–æ –ø–æ –∏–Ω–¥–µ–∫—Å—É

        tk.Label(win_settings, text='–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω').grid(row=2, column=0)  # —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ –º–∏–Ω
        mines_entry = tk.Entry(win_settings)  # —Å–æ–∑–¥–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –º–∏–Ω
        mines_entry.insert(0, MineSweeper.mines)  # –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ –º–∏–Ω —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
        mines_entry.grid(row=2, column=1, padx=20, pady=20)  # –≤—Å—Ç–∞–≤–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞ –≤ –æ–∫–Ω–æ –ø–æ –∏–Ω–¥–µ–∫—Å—É

        save_btn = tk.Button(win_settings, text='–ø—Ä–∏–º–µ–Ω–∏—Ç—å',
                  command=lambda :self.change_settings(rows_entry, cols_entry, mines_entry))  # –∫–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_btn.grid(row=3, column=0, columnspan=2, padx=20, pady=20)  # –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è

    def change_settings(self, row: tk.Entry, col: tk.Entry, mine: tk.Entry):  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        try:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
            int(row.get()), int(col.get()), int(mine.get())
        except ValueError:
            showerror('–æ—à–∏–±–∫–∞', '–≤—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')  # –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ —Å –æ—à–∏–±–∫–æ–π
            return
        MineSweeper.rows = int(row.get())
        MineSweeper.cols = int(col.get())
        MineSweeper.mines = int(mine.get())  # –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –ø–æ–ª—è–º –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        self.reload()  # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã

    def create_widgets(self):  # —Å–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–∏–¥–∂–µ—Ç—ã
        menubar = tk.Menu(self.window)  # —Å–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π –ø–æ–ª–æ—Å–∫–∏ –º–µ–Ω—é –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –æ–∫–Ω–µ
        self.window.config(menu=menubar)  # —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –º–µ–Ω—é –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –æ–∫–Ω–µ

        settings_menu = tk.Menu(menubar, tearoff=0)  # —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–æ–≤ –≤ –º–µ–Ω—é
        settings_menu.add_command(label='–∏–≥—Ä–∞—Ç—å', command=self.reload)
        settings_menu.add_command(label='–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', command=self.create_settings_window)
        settings_menu.add_command(label='–≤—ã—Ö–æ–¥', command=self.window.destroy)  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
        # –∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        menubar.add_cascade(label='—Ñ–∞–π–ª', menu=settings_menu)  # –ø–µ—Ä–µ–¥–∞–µ–º settings_menu –≤ menubar –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º
        # –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫

        count = 1
        for i in range(1, MineSweeper.rows + 1):
            for j in range(1, MineSweeper.cols + 1):  # —Ü–∏–∫–ª—ã –ø–æ –≤—Å–µ–º –∫–Ω–æ–ø–∫–∞–º, –∫—Ä–æ–º–µ –∫—Ä–∞–π–Ω–∏—Ö
                btn = self.buttons[i][j]
                btn.number = count  # –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–µ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä
                btn.grid(row=i, column=j, stick='NWES')  # —Ä–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ —è—á–µ–π–∫–∞—Ö
                count += 1

        for i in range(1, MineSweeper.rows + 1):  # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–∂–¥–æ–º—É —Ä—è–¥—É —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –Ω–∞ –æ–∫–Ω–µ
            tk.Grid.rowconfigure(self.window, i, weight=1)

        for i in range(1, MineSweeper.cols + 1):  # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –Ω–∞ –æ–∫–Ω–µ
            tk.Grid.columnconfigure(self.window, i, weight=1)

    def print_buttons(self):  # –≤—ã–≤–æ–¥–∏–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –Ω–∞ –∫–æ–Ω—Å–æ–ª—å (–ø—Ä–æ—Ç–æ—Ç–∏–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –∏–≥—Ä–æ–≤–æ–º –ø–æ–ª–µ)
        for i in range(1, MineSweeper.rows + 1):
            for j in range(1, MineSweeper.cols + 1):  # —Ü–∏–∫–ª—ã –ø–æ –≤—Å–µ–º –∫–Ω–æ–ø–∫–∞–º, –∫—Ä–æ–º–µ –∫—Ä–∞–π–Ω–∏—Ö
                btn = self.buttons[i][j]
                if btn.is_mine:  # –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∞
                    print('B', end='')
                else:
                    print(btn.count_bomb, end='')
            print()

    @staticmethod
    def get_mines_places(exclude_number: int):  # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω—ã
        indexes = list(range(1, MineSweeper.cols * MineSweeper.rows + 1))  # —Å–ø–∏—Å–æ–∫ —Å –ø–æ—Ä—è–¥–∫–æ–≤—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        indexes.remove(exclude_number)  # —É–¥–∞–ª—è–µ–º –Ω–æ–º–µ—Ä –∫–Ω–æ–ø–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –º—ã –Ω–∞–∂–∞–ª–∏ –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
        shuffle(indexes)  # –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–∫–µ
        return indexes[:MineSweeper.mines]  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–µ–∑ —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

    def insert_mines(self, number: int):  # –º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        index_mines = self.get_mines_places(number)  # –ø–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä–∞ –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        print(index_mines)  # –ø–µ—á–∞—Ç–∞–µ–º –∏—Ö –Ω–∞ –∫–æ–Ω—Å–æ–ª—å
        for i in range(1, MineSweeper.rows + 1):
            for j in range(1, MineSweeper.cols + 1):  # —Ü–∏–∫–ª—ã –ø–æ –∫–Ω–æ–ø–∫–∞–º, –∫—Ä–æ–º–µ –∫—Ä–∞–π–Ω–∏—Ö
                btn = self.buttons[i][j]
                if btn.number in index_mines:
                    btn.is_mine = True  # –∏–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏, –æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π

    def count_mines_in_buttons(self):  # –ø–æ–¥—Å—á–µ—Ç —Å–æ—Å–µ–¥–Ω–∏—Ö –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —è—á–µ–µ–∫
        for i in range(1, MineSweeper.rows + 1):
            for j in range(1, MineSweeper.cols + 1):  # —Ü–∏–∫–ª—ã –ø–æ –∫–Ω–æ–ø–∫–∞–º, –∫—Ä–æ–º–µ –∫—Ä–∞–π–Ω–∏—Ö
                btn = self.buttons[i][j]
                count_bomb = 0
                if not btn.is_mine:  # –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∞
                    for row_d in [-1, 0, 1]:
                        for col_d in [-1, 0, 1]:  # —Ü–∏–∫–ª—ã –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –≤—Å–µ—Ö —Å–æ—Å–µ–¥–µ–π —Å —Ä–∞–∑–Ω–∏—Ü–µ–π –≤ 1 –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É
                            neighbour = self.buttons[i + row_d][j + col_d]
                            if neighbour.is_mine:  # –µ—Å–ª–∏ —ç—Ç–∞ —Å–æ—Å–µ–¥–Ω—è—è —è—á–µ–π–∫–∞ –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∞
                                count_bomb += 1  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ—Å–µ–¥–Ω–∏—Ö –º–∏–Ω
                btn.count_bomb = count_bomb  # –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ—Å–µ–¥–µ–π

    def start(self):  # –º–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã
        self.create_widgets()  # —Å–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è –∏–≥—Ä—ã
        MineSweeper.window.mainloop()  # –≤—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞


game = MineSweeper()  # —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ MineSweeper
game.start()  # —É –¥–∞–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ start